SetVerbose ("Infinite", 0);
AttachSpec ("spec");
load "checks/schur.m";
load "checks/check-results.m";

p := 3;
N := [];
for m in [1..1000] do
   if m in {2^e: e in [8..10]} then continue; end if;
   if m in {1024, 1536, 1792} then continue; end if;
   if CanIdentifyGroup (m) eq false then continue; end if;
   B := PrimeBasis (m);
   for p in B do 
      L := MonomialClasses (p, m: Insoluble:=false);
      "\n Order = ", m, " Dimension = ", p, "# of reps is ", #L;
      // if #L eq 0 then continue; end if;
      L1, L2 := StandardGroups (L, m); 
      flag := CheckMonomialResult (p, m, L2);
      assert flag;
   end for;
end for;

